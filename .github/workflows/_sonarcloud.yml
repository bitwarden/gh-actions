name: Perform SonarCloud Scan

on:
  workflow_call: 

    inputs:
      sonar-config:
        description: "Configuration for SonarCloud"
        type: string
        default: "default"
      sonar-test-inclusions:
        type: string
        default: "/test"
      sonar-exclusions:
        type: string
        default: "/test"
      sonar-java-version:
        type: number
        default: 17
      sonar-java-distribution:
        type: string
        default: temurin
    secrets:
      SONAR_TOKEN:
        required: true

permissions: {}
  
jobs:

  quality:
    name: Quality scan
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{  github.event.pull_request.head.sha }}

      - name: Scan with SonarCloud
        if: inputs.sonar-config == 'default'
        uses: sonarsource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97 # v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} 
            -Dsonar.test.inclusions=${{ inputs.sonar-test-inclusions }}
            -Dsonar.exclusions=${{ inputs.sonar-exclusions }}

      - name: Set up Java
        if: inputs.sonar-config == 'maven' || inputs.sonar-config == 'dotnet'
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: ${{ inputs.sonar-java-version }}
          distribution: ${{ inputs.sonar-java-distribution }}

      - name: Set up .NET
        if: inputs.sonar-config == 'dotnet'
        uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # v4.3.0

      - name: Install SonarCloud scanner
        if: inputs.sonar-config == 'dotnet'
        run: dotnet tool install dotnet-sonarscanner -g

      - name: Scan with SonarCloud
        if: inputs.sonar-config == 'dotnet'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}" \
          /d:sonar.test.inclusions=${{ inputs.sonar-test-inclusions }} \
          /d:sonar.exclusions=${{ inputs.sonar-exclusions }} \
          /o:"${{ github.repository_owner }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" ${{ contains(github.event_name, 'pull_request') && format('/d:sonar.pullrequest.key={0}', github.event.pull_request.number) || '' }}
          dotnet build
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Scan with SonarCloud
        if: inputs.sonar-config == 'maven'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean install -Dgpg.skip=true sonar:sonar -Dsonar.test.inclusions=${{ inputs.sonar-test-inclusions }} -Dsonar.exclusions=${{ inputs.sonar-exclusions }}  ${{ contains(github.event_name, 'pull_request') && format('-Dsonar.pullrequest.key={0}', github.event.pull_request.number) || '' }}
