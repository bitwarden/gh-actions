name: _build
run-name: Build ${{ inputs.project-name }}

on:
  workflow_call:
    inputs:
      project-name:
        type: string
        required: true
      project-path:
        type: string
        required: true
      version:
        type: string
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1

      - name: Cache NuGet packages
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore ${{ inputs.project-path }}/${{ inputs.project-name }}.csproj

      - name: Build
        run: dotnet build --verbosity minimal ${{ inputs.project-path }}/${{ inputs.project-name }}.csproj

      - name: Publish
        run: |
          echo "Publish"
          dotnet publish ${{ inputs.project-path }}/${{ inputs.project-name }}.csproj \
            -c Release --no-restore \
            -o ./tmp/publish-${{ inputs.project-name }} -p:Version=${{ inputs.version }}

      - name: Create artifact
        run: |
          cd ./tmp/publish-${{ inputs.project-name }}
          zip -r ${{ inputs.project-name }}.zip .
          mv ${{ inputs.project-name }}.zip ../../
          pwd
          ls -atlh ../../

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.project-name }}.zip
          path: ./${{ inputs.project-name }}.zip
          if-no-files-found: error
